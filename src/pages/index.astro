---
import { BLOG_NAME,DESCRIPTION } from '../consts';
import { itemSort, releasedSort } from '../utils/util';
import Layout from '../layouts/Layout.astro';
import PageTitle from '../components/PageTitle.astro';
import ArticleCard from '../components/ArticleCard.astro';
import FlexBox from '../components/FlexBox.astro';
import Button from '../components/Button.astro';

const allPosts = await Astro.glob('./article/items/*.md'); // 全ての記事を取得。
const releasedPosts = releasedSort(allPosts); //draft = 下書きじゃない記事を抽出。
itemSort(releasedPosts);
---
<Layout>
	<PageTitle title={BLOG_NAME} lead={DESCRIPTION} />
	<!-- Card Blog -->
	<div class="pt-10 lg:pt-14 mx-auto">
	<!-- Grid -->
	<section class="grid lg:grid-cols-2 lg:gap-y-16 gap-10">
		{
			itemSort(releasedPosts).slice(0,6).map((post) => {
				const date = new Date(post.frontmatter.pubDate);
				// 年、月、日を取得
				const year = date.getFullYear();
				const month = String(date.getMonth() + 1).padStart(2, '0');  // 月は0から始まるため+1
				const day = String(date.getDate()).padStart(2, '0');
				const formattedPubDate = `${year}年${month}月${day}日`;
				return (
					<ArticleCard 
					postTitle={post.frontmatter.title}
					postDate={post.frontmatter.pubDate}
					postFormatDate={formattedPubDate}
					postDesc={post.frontmatter.description}
					postUrl={post.url}
					postImage={
						post.frontmatter.heroImage === '' ? '../../assets/img/general.jpg' : post.frontmatter.heroImage
					}
					/>
				)
			})
		}
	</section>
	<!-- End Grid -->
		
	</div>
	<!-- End Card Blog -->
	<FlexBox horizontal="center" classes="mt-12 md:mt-24 max-w-[40rem] mx-auto"><Button text="記事一覧" link="/article/1" /></FlexBox>
</Layout>
