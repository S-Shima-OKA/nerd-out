---
const {pageUrlPrev, pageNextUrl, pageNateUrl, currentPage, pageTotal} = Astro.props;
const totalNum = pageTotal;
const postPerPage = 6;
const mathPages = Math.ceil(totalNum / postPerPage);
const pageNumbers = Array.from({ length: mathPages }, (_, i) => i + 1);
---
<!-- Pagination -->
<nav class="flex justify-center items-center gap-x-1" aria-label="Pagination">
    {
      pageUrlPrev ? 
        (
          <a class="min-h-[38px] min-w-[38px] py-2 px-2.5 inline-flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent text-gray-800 hover:bg-gray-100 focus:outline-2 focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:border-transparent dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10" aria-label="Previous" href={pageUrlPrev}>
                <svg class="shrink-0 size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6"></path></svg>
                <span class="sr-only">Previous</span>
          </a>
        ) : (
          <div class="min-h-[38px] min-w-[38px]" aria-hidden="true"></div>
        )
    }
    <ul class="flex items-center gap-x-1">
      {
        pageNumbers.map((num) => {
          return (
          num === currentPage ? (
            <li><a class="min-h-[38px] min-w-[38px] flex justify-center items-center border border-transparent text-white bg-gray-800 py-3 px-4 text-normal rounded-lg focus:outline-none focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:border-transparent dark:text-gray-800 dark:bg-white" aria-current="page">{currentPage}</a></li>
          ) : (
            <li><a class="min-h-[38px] min-w-[38px] flex justify-center items-center border border-transparent text-gray-800 hover:bg-gray-100 py-3 px-4 text-normal rounded-lg focus:outline-2 focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:border-transparent dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10" href={pageNateUrl + num}>{num}</a></li>
          )
          )
        })
      }
    </ul>
    {
      pageNextUrl ? 
        (
          <a class="min-h-[38px] min-w-[38px] py-2 px-2.5 inline-flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent text-gray-800 hover:bg-gray-100 focus:outline-2 focus:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:border-transparent dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10" aria-label="Next" href={pageNextUrl}>
          <span class="sr-only">Next</span>
          <svg class="shrink-0 size-3.5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m9 18 6-6-6-6"></path>
          </svg>
        </a>
        ) : (
          <div class="min-h-[38px] min-w-[38px]" aria-hidden="true"></div>
        )
    }
    
  </nav>
  <!-- End Pagination -->