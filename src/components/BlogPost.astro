---
import ArticleCard from '../components/ArticleCard.astro';
import FlexBox from '../components/FlexBox.astro';
import Button from '../components/Button.astro';
import Pagination from './Pagination.astro';
import { itemSort } from '../utils/utils';
const allPosts = await Astro.glob('../pages/article/items/*.md'); // 全ての記事を取得。
const displayPosts = allPosts.filter((post) => !post.frontmatter.draft); //draft = 下書きじゃない記事を抽出。
itemSort(displayPosts);

const { pathname } = Astro.url;
---
<!-- Card Blog -->
<div class="pt-10 lg:pt-14 mx-auto">
<!-- Grid -->
    <section class="grid lg:grid-cols-2 lg:gap-y-16 gap-10">
        {
            itemSort(displayPosts).map((post) => {
                const date = new Date(post.frontmatter.pubDate);
                // 年、月、日を取得
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');  // 月は0から始まるため+1
                const day = String(date.getDate()).padStart(2, '0');
                const formattedPubDate = `${year}年${month}月${day}日`;
                return (
                    <ArticleCard 
                    postTitle={post.frontmatter.title}
                    postDate={post.frontmatter.pubDate}
                    postFormatDate={formattedPubDate}
                    postDesc={post.frontmatter.description}
                    postUrl={post.url}
                    postImage={
                        post.frontmatter.heroImage === '' ? '../../assets/img/general.jpg' : post.frontmatter.heroImage
                    }
                    />
                )
            })
        }
    </section>
    <!-- End Grid -->
    {pathname === '/' && <FlexBox vertical="center" classes="mt-12 md:mt-24 max-w-[40rem] mx-auto"><Button text="記事一覧" link="/article/" /></FlexBox>}
    {pathname !== '/' && <FlexBox vertical="center" classes="mt-12 md:mt-24 max-w-[40rem] mx-auto"><Pagination /></FlexBox>}
    
</div>
<!-- End Card Blog -->